name: Deploy to production

on:
  workflow_dispatch:
    inputs:
      user:
        description: 'New version user service (leave blank to skip)'
        required: false
      organization:
        description: 'New version organization service (leave blank to skip)'
        required: false
      frontend:
        description: 'New version frontend service (leave blank to skip)'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy user service
        if: ${{ github.event.inputs.user }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{secrets.BOT_ACCESS_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/bojancakar/test-templates/actions/workflows/release-user.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version_user": "${{ github.event.inputs.user }}"}}'

      - name: Deploy organization service
        if: ${{ github.event.inputs.organization }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{secrets.BOT_ACCESS_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/bojancakar/test-organization/actions/workflows/release-organization.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version_organization": "${{ github.event.inputs.organization }}"}}'

      - name: Deploy frontend service
        if: ${{ github.event.inputs.frontend }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{secrets.BOT_ACCESS_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/bojancakar/test-frontend/actions/workflows/release-frontend.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version_frontend": "${{ github.event.inputs.frontend }}"}}'

  tag: 
    # if: github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'no_release')
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.token}}

    - uses: actions/setup-node@v3
      with:
       node-version: 16
       
    - name: Looking for minor changes 
      if: length(github.event.inputs) > 1
      run: echo "NEW_VERSION=$(npm version minor --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Looking for major changes
      if: length(github.event.inputs) == 1
      run: echo "NEW_VERSION=$(npm version major --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Set outputs
      id: output
      run: echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Push tag
      run: |
        git config --global user.email "new_version@fornul.io"
        git config --global user.name "Github Action"
        git tag -a -m "new release" $NEW_VERSION
        git add .
        git commit -m "new version"
        git push origin main -f --tags
    outputs:
      new_version: ${{ steps.output.outputs.new_version}}

  create-release:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.tag.outputs.new_version}}
          release_name: Release v${{ needs.tag.outputs.new_version}}
          body: Release notes for v${{ needs.tag.outputs.new_version}}