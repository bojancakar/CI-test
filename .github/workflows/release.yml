name: Deploy to production

on:
  workflow_dispatch:
    inputs:
      user:
        description: 'New version user service (leave blank to skip)'
        required: false
      organization:
        description: 'New version organization service (leave blank to skip)'
        required: false
      frontend:
        description: 'New version frontend service (leave blank to skip)'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy user service
        if: ${{ github.event.inputs.user }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{secrets.BOT_ACCESS_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/bojancakar/test-templates/actions/workflows/release-user.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version_user": "${{ github.event.inputs.user }}"}}'

      - name: Deploy organization service
        if: ${{ github.event.inputs.organization }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{secrets.BOT_ACCESS_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/bojancakar/test-organization/actions/workflows/release-organization.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version_organization": "${{ github.event.inputs.organization }}"}}'

      - name: Deploy frontend service
        if: ${{ github.event.inputs.frontend }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{secrets.BOT_ACCESS_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/bojancakar/test-frontend/actions/workflows/release-frontend.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version_frontend": "${{ github.event.inputs.frontend }}"}}'

  create-release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Create release and tag
        if: ${{ github.event.inputs.user || github.event.inputs.organization || github.event.inputs.frontend }}
        run: |
          VERSION=$(gh release list | awk 'BEGIN { v=1 } /v[0-9]+.[0-9]+.[0-9]+/ { split($1,a,"."); if (a[2]>v) { v=a[2] } } END { printf "v%d.%d.%d", v+1, 0, 0 }')
          echo "Creating release ${VERSION}"
          gh release create ${VERSION} -t "Release ${VERSION}"
        env:
          GH_TOKEN: ${{ secrets.BOT_ACCESS_TOKEN }}